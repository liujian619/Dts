配置文件（UTF-8 格式）说明：

    1. 以“#”开头：注释；

    2. 以“+wf:”开头：指定用以匹配文件的通配符，通过该通配符匹配到的文件集合会被添加到解析结果中；

    3. 以“-wf:”开头：指定用以匹配文件的通配符，通过该通配符匹配到的文件集合会从解析结果中移除；

    4. 以“+rf:”开头：指定用以匹配文件的正则表达式，通过该正则表达式匹配到的文件集合会被添加到解析结果中；

    5. 以“-rf:”开头：指定用以匹配文件的正则表达式，通过该正则表达式匹配到的文件集合会从解析结果中移除；

    6. 以“+wd:”开头：指定用以匹配目录的通配符，通过该通配符匹配到的目录集合会被添加到解析结果中；

    7. 以“-wd:”开头：指定用以匹配目录的通配符，通过该通配符匹配到的目录集合会从解析结果中移除；

    8. 以“+rd:”开头：指定用以匹配目录的正则表达式，通过该正则表达式匹配到的目录集合会被添加到解析结果中；

    9. 以“-rd:”开头：指定用以匹配目录的正则表达式，通过该正则表达式匹配到的目录集合会从解析结果中移除；

    10. “--disable”：禁用所有操作，默认 false；

    11. “--mergeInput”：启用输入合并，默认 false；

    12. 以“<<”开头：指定输入合并后的文件名，默认 lib.js；

    13. “--mergeOutput”：启用输出合并，默认 false；

    14. 以“>>”开头：指定输出合并后的文件名，默认 lib.d.ts；

上述使用到的路径中，仅支持 / 作为路径分隔符。


文档注释中的 @dts 基本格式：

    /**
     * @dts_i 接口名
     * @dts_c 类名
     * @dts_m 方法声明
     * @dts_p 属性声明
     */

    /** @dts_type 类型声明 */

    /** @dts_raw 原始内容 */

    /** @dts_end */

格式说明：

    1. @dts 的内容中不得出现破坏文档注释基本结构的字符串，例如：/*，/**，*/ 等；

    2. @dts_i，@dts_c，@dts_m，@dts_p 四项在一个文档注释中只能使用任意一项，多次使用，会以最后一项为准；

    3. @dts_type 声明类型时，关键字 type 可以省略；

    4. @dts_raw 可以是任意原始内容（不得违背 1. 的要求），该内容会被直接复制到输出文件中；

    5. @dts_end 用于辅助定位接口或类的结束处。

完整示例：

/** @dts_type Map = { "a": A, "number": number, "string": string } */

/**
 * A 类。
 * @dts_c A
 */
class A {
    /**
     * 属性。
     * @dts_p prop: object
     */
    prop;

    /**
     * 将两个数相加，返回结果。
     * @param {number} a 第一个数
     * @param {number} b 第二个数
     * @returns {number}
     * @dts_m add(a: number, b: number): number
     */
    add(a, b) {
        return a + b;
    }
}
/** @dts_end */    